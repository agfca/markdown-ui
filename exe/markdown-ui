#!/usr/bin/env ruby

require 'bundler/setup'
require 'markdown-ui'

parser = Redcarpet::Markdown.new(MarkdownUI::Renderer, quote: true, tables: true, xhtml: true)
f = File.open(ARGV.first, 'r')
@content = parser.render f.read
f.close

puts <<-EOS
<!doctype html>

<html lang='en'>
<head>
  <meta charset='utf-8'>
  <meta http-equiv='X-UA-Compatible' content='IE=edge,chrome=1'>
  <meta name='viewport' content='width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1'>

  <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.1.6/semantic.min.css'>
  <script src='https://code.jquery.com/jquery-2.1.4.min.js'></script>
  <script src='https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.1.6/semantic.min.js'></script>

  <!--[if lt IE 9]>
  <script src='http://html5shiv.googlecode.com/svn/trunk/html5.js'></script>
  <![endif]-->
</head>
<body>
  <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.1.6/components/reset.min.css'>

  #{@content}

  <div class="ui last container"></div>

  <style>
  .last.container {
    margin-bottom: 300px !important;
  }
  </style>

  <script type="text/javascript">
  $(document).ready(function() {

    var
      $headers     = $('.header'),
      $header      = $headers.first(),
      ignoreScroll = false,
      timer
    ;

    // Preserve example in viewport when resizing browser
    $(window)
      .on('resize', function() {
        // ignore callbacks from scroll change
        clearTimeout(timer);
        $headers.visibility('disable callbacks');

        // preserve position
        $(document).scrollTop( $header.offset().top );

        // allow callbacks in 500ms
        timer = setTimeout(function() {
          $headers.visibility('enable callbacks');
        }, 500);
      })
    ;
    $headers
      .visibility({
        // fire once each time passed
        once: false,

        // don't refresh position on resize
        checkOnRefresh: true,

        // lock to this element on resize
        onTopPassed: function() {
          $header = $(this);
        },
        onTopPassedReverse: function() {
          $header = $(this);
        }
      })
    ;
  });
  </script>
</body>
</html>
EOS
