<?xml version="1.0" encoding="UTF-8"?>
<module type="RUBY_MODULE" version="4">
  <component name="FacetManager">
    <facet type="gem" name="Ruby Gem">
      <configuration>
        <option name="GEM_APP_ROOT_PATH" value="$MODULE_DIR$" />
        <option name="GEM_APP_TEST_PATH" value="$MODULE_DIR$/test" />
        <option name="GEM_APP_LIB_PATH" value="$MODULE_DIR$/lib" />
      </configuration>
    </facet>
  </component>
  <component name="ModuleRunConfigurationManager">
    <configuration default="false" name="block_quote" type="RubyRunConfigurationType" factoryName="Ruby" temporary="true">
      <module name="markdown-ui" />
      <RUBY_RUN_CONFIG NAME="RUBY_ARGS" VALUE="-e $stdout.sync=true;$stderr.sync=true;load($0=ARGV.shift)" />
      <RUBY_RUN_CONFIG NAME="WORK DIR" VALUE="$MODULE_DIR$/lib/markdown-ui/renderers" />
      <RUBY_RUN_CONFIG NAME="SHOULD_USE_SDK" VALUE="false" />
      <RUBY_RUN_CONFIG NAME="ALTERN_SDK_NAME" VALUE="" />
      <RUBY_RUN_CONFIG NAME="myPassParentEnvs" VALUE="true" />
      <envs />
      <EXTENSION ID="BundlerRunConfigurationExtension" bundleExecEnabled="true" />
      <EXTENSION ID="JRubyRunConfigurationExtension" NailgunExecEnabled="false" />
      <EXTENSION ID="RubyCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" track_test_folders="true" runner="rcov">
        <COVERAGE_PATTERN ENABLED="true">
          <PATTERN REGEXPS="/.rvm/" INCLUDED="false" />
        </COVERAGE_PATTERN>
      </EXTENSION>
      <EXTENSION ID="org.jetbrains.plugins.ruby.motion.run.MotionSimulatorRunExtension" />
      <RUBY_RUN_CONFIG NAME="SCRIPT_PATH" VALUE="$MODULE_DIR$/lib/markdown-ui/renderers/block_quote.rb" />
      <RUBY_RUN_CONFIG NAME="SCRIPT_ARGS" VALUE="" />
      <method />
    </configuration>
    <configuration default="false" name="All tests in markdown_ui: markdown-ui" type="TestUnitRunConfigurationType" factoryName="Test::Unit/Shoulda/Minitest" temporary="true">
      <predefined_log_file id="RUBY_TESTUNIT" enabled="true" />
      <module name="markdown-ui" />
      <RTEST_RUN_CONFIG_SETTINGS_ID NAME="RUBY_ARGS" VALUE="-e $stdout.sync=true;$stderr.sync=true;load($0=ARGV.shift)" />
      <RTEST_RUN_CONFIG_SETTINGS_ID NAME="WORK DIR" VALUE="$MODULE_DIR$/lib/markdown_ui" />
      <RTEST_RUN_CONFIG_SETTINGS_ID NAME="SHOULD_USE_SDK" VALUE="false" />
      <RTEST_RUN_CONFIG_SETTINGS_ID NAME="ALTERN_SDK_NAME" VALUE="" />
      <RTEST_RUN_CONFIG_SETTINGS_ID NAME="myPassParentEnvs" VALUE="true" />
      <envs>
        <env name="JRUBY_OPTS" value="-X+O" />
      </envs>
      <EXTENSION ID="BundlerRunConfigurationExtension" bundleExecEnabled="true" />
      <EXTENSION ID="JRubyRunConfigurationExtension" NailgunExecEnabled="false" />
      <EXTENSION ID="RubyCoverageRunConfigurationExtension" enabled="false" sample_coverage="true" track_test_folders="true" runner="rcov">
        <COVERAGE_PATTERN ENABLED="true">
          <PATTERN REGEXPS="/.rvm/" INCLUDED="false" />
        </COVERAGE_PATTERN>
      </EXTENSION>
      <EXTENSION ID="org.jetbrains.plugins.ruby.motion.run.MotionSimulatorRunExtension" />
      <RTEST_RUN_CONFIG_SETTINGS_ID NAME="TESTS_FOLDER_PATH" VALUE="$MODULE_DIR$/lib/markdown_ui" />
      <RTEST_RUN_CONFIG_SETTINGS_ID NAME="TEST_SCRIPT_PATH" VALUE="" />
      <RTEST_RUN_CONFIG_SETTINGS_ID NAME="TEST_FILE_MASK" VALUE="**/{*_test,test_*}.rb" />
      <RTEST_RUN_CONFIG_SETTINGS_ID NAME="TEST_METHOD_NAME" VALUE="" />
      <RTEST_RUN_CONFIG_SETTINGS_ID NAME="TEST_TEST_TYPE" VALUE="ALL_IN_FOLDER" />
      <RTEST_RUN_CONFIG_SETTINGS_ID NAME="DRB" VALUE="false" />
      <RTEST_RUN_CONFIG_SETTINGS_ID NAME="ZEUS" VALUE="false" />
      <RTEST_RUN_CONFIG_SETTINGS_ID NAME="SPRING" VALUE="false" />
      <RTEST_RUN_CONFIG_SETTINGS_ID NAME="RUNNER_OPTIONS" VALUE="" />
      <method />
    </configuration>
  </component>
  <component name="NewModuleRootManager">
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/test" isTestSource="true" />
    </content>
    <orderEntry type="jdk" jdkName="ruby-2.2.3-p173" jdkType="RUBY_SDK" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="module-library">
      <library name="markdown-ui-button (v[path], /Users/Joel/dev/github/markdown-ui/components/elements/markdown-ui-button) [path][gem]">
        <CLASSES>
          <root url="file://$MODULE_DIR$/components/elements/markdown-ui-button/lib" />
        </CLASSES>
        <SOURCES>
          <root url="file://$MODULE_DIR$/components/elements/markdown-ui-button/lib" />
        </SOURCES>
      </library>
    </orderEntry>
    <orderEntry type="module-library">
      <library name="markdown-ui-container (v[path], /Users/Joel/dev/github/markdown-ui/components/elements/markdown-ui-container) [path][gem]">
        <CLASSES>
          <root url="file://$MODULE_DIR$/components/elements/markdown-ui-container/lib" />
        </CLASSES>
        <SOURCES>
          <root url="file://$MODULE_DIR$/components/elements/markdown-ui-container/lib" />
        </SOURCES>
      </library>
    </orderEntry>
    <orderEntry type="module-library">
      <library name="markdown-ui-content (v[path], /Users/Joel/dev/github/markdown-ui/components/elements/markdown-ui-content) [path][gem]">
        <CLASSES>
          <root url="file://$MODULE_DIR$/components/elements/markdown-ui-content/lib" />
        </CLASSES>
        <SOURCES>
          <root url="file://$MODULE_DIR$/components/elements/markdown-ui-content/lib" />
        </SOURCES>
      </library>
    </orderEntry>
    <orderEntry type="module-library">
      <library name="markdown-ui-grid (v[path], /Users/Joel/dev/github/markdown-ui/components/collections/markdown-ui-grid) [path][gem]">
        <CLASSES>
          <root url="file://$MODULE_DIR$/components/collections/markdown-ui-grid/lib" />
        </CLASSES>
        <SOURCES>
          <root url="file://$MODULE_DIR$/components/collections/markdown-ui-grid/lib" />
        </SOURCES>
      </library>
    </orderEntry>
    <orderEntry type="module-library">
      <library name="markdown-ui-header (v[path], /Users/Joel/dev/github/markdown-ui/components/elements/markdown-ui-header) [path][gem]">
        <CLASSES>
          <root url="file://$MODULE_DIR$/components/elements/markdown-ui-header/lib" />
        </CLASSES>
        <SOURCES>
          <root url="file://$MODULE_DIR$/components/elements/markdown-ui-header/lib" />
        </SOURCES>
      </library>
    </orderEntry>
    <orderEntry type="module-library">
      <library name="markdown-ui-input (v[path], /Users/Joel/dev/github/markdown-ui/components/elements/markdown-ui-input) [path][gem]">
        <CLASSES>
          <root url="file://$MODULE_DIR$/components/elements/markdown-ui-input/lib" />
        </CLASSES>
        <SOURCES>
          <root url="file://$MODULE_DIR$/components/elements/markdown-ui-input/lib" />
        </SOURCES>
      </library>
    </orderEntry>
    <orderEntry type="module-library">
      <library name="markdown-ui-label (v[path], /Users/Joel/dev/github/markdown-ui/components/elements/markdown-ui-label) [path][gem]">
        <CLASSES>
          <root url="file://$MODULE_DIR$/components/elements/markdown-ui-label/lib" />
        </CLASSES>
        <SOURCES>
          <root url="file://$MODULE_DIR$/components/elements/markdown-ui-label/lib" />
        </SOURCES>
      </library>
    </orderEntry>
    <orderEntry type="module-library">
      <library name="markdown-ui-menu (v[path], /Users/Joel/dev/github/markdown-ui/components/collections/markdown-ui-menu) [path][gem]">
        <CLASSES>
          <root url="file://$MODULE_DIR$/components/collections/markdown-ui-menu/lib" />
        </CLASSES>
        <SOURCES>
          <root url="file://$MODULE_DIR$/components/collections/markdown-ui-menu/lib" />
        </SOURCES>
      </library>
    </orderEntry>
    <orderEntry type="module-library">
      <library name="markdown-ui-message (v[path], /Users/Joel/dev/github/markdown-ui/components/collections/markdown-ui-message) [path][gem]">
        <CLASSES>
          <root url="file://$MODULE_DIR$/components/collections/markdown-ui-message/lib" />
        </CLASSES>
        <SOURCES>
          <root url="file://$MODULE_DIR$/components/collections/markdown-ui-message/lib" />
        </SOURCES>
      </library>
    </orderEntry>
    <orderEntry type="module-library">
      <library name="markdown-ui-segment (v[path], /Users/Joel/dev/github/markdown-ui/components/elements/markdown-ui-segment) [path][gem]">
        <CLASSES>
          <root url="file://$MODULE_DIR$/components/elements/markdown-ui-segment/lib" />
        </CLASSES>
        <SOURCES>
          <root url="file://$MODULE_DIR$/components/elements/markdown-ui-segment/lib" />
        </SOURCES>
      </library>
    </orderEntry>
    <orderEntry type="library" scope="PROVIDED" name="bundler (v1.10.6, ruby-2.2.3-p173) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="byebug (v6.0.2, ruby-2.2.3-p173) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="codeclimate-test-reporter (v0.4.8, ruby-2.2.3-p173) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="docile (v1.1.5, ruby-2.2.3-p173) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="json (v1.8.3, ruby-2.2.3-p173) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="mini_portile (v0.6.2, ruby-2.2.3-p173) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="nokogiri (v1.6.6.2, ruby-2.2.3-p173) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="power_assert (v0.2.4, ruby-2.2.3-p173) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="redcarpet (v3.3.3, ruby-2.2.3-p173) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="simplecov (v0.10.0, ruby-2.2.3-p173) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="simplecov-html (v0.10.0, ruby-2.2.3-p173) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="test-unit (v3.1.5, ruby-2.2.3-p173) [gem]" level="application" />
  </component>
</module>